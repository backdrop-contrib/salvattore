diff --git a/config/salvattore.settings.json b/config/salvattore.settings.json
new file mode 100644
index 0000000..14495af
--- /dev/null
+++ b/config/salvattore.settings.json
@@ -0,0 +1,5 @@
+{
+  "_config_name": "salvattore.settings",
+  "salvattore_use_min_js": "1",
+  "salvattore_load_default_css": "0"
+}
diff --git a/salvattore.admin.inc b/salvattore.admin.inc
index 648f133..c111723 100644
--- a/salvattore.admin.inc
+++ b/salvattore.admin.inc
@@ -5,7 +5,9 @@
  * Provide administration of PACE module.
  */
 
-function salvattore_admin_settings_form() {
+function salvattore_settings_form() {
+  $config = config('salvattore.settings');
+
   $form = array();
 
   $form['salvattore_use_min_js'] = array(
@@ -16,7 +18,7 @@ function salvattore_admin_settings_form() {
       '1' => 'Minified',
       '0' => 'Full (debug)',
     ),
-    '#default_value' => variable_get('salvattore_use_min_js',array()),
+    '#default_value' => $config->get('salvattore_use_min_js'),
   );
 
 
@@ -24,8 +26,25 @@ function salvattore_admin_settings_form() {
     '#title' => t('Load default CSS'),
     '#description' => t('Salvattore is easily configurable via CSS and you should write your own in your theme.<br>If some reason you want to use the default then enable this setting.'),
     '#type' => 'checkbox',
-    '#default_value' => variable_get('salvattore_load_default_css',array()),
+    '#default_value' => $config->get('salvattore_load_default_css'),
+  );
+
+  $form['actions']['#type'] = 'actions';
+  $form['actions']['submit'] = array(
+    '#type' => 'submit',
+    '#value' => t('Save configuration'),
   );
 
-  return system_settings_form($form);
+  return $form;
+}
+
+/**
+ * Submit handler for salvattore_settings_form().
+ */
+function salvattore_settings_form_submit($form, &$form_state) {
+  $config = config('salvattore.settings');
+  $config->set('salvattore_use_min_js', $form_state['values']['salvattore_use_min_js']);
+  $config->set('salvattore_load_default_css', $form_state['values']['salvattore_load_default_css']);
+  $config->save();
+  backdrop_set_message(t('Salvattore configuration has been saved.'));
 }
diff --git a/salvattore.info b/salvattore.info
index 9f70b76..e2bed48 100644
--- a/salvattore.info
+++ b/salvattore.info
@@ -1,9 +1,7 @@
 name = Salvattore Views
 description = "Provides a Views plugin for displaying content in a Masonry layout using Salvattore"
-core = 7.x
+backdrop = 1.x
 package = JavaScript
 configure = admin/config/user-interface/salvattore
 
-files[] = views_plugin_style_salvattore.inc
-
 dependencies[] = views
diff --git a/salvattore.install b/salvattore.install
deleted file mode 100644
index 0ce9af5..0000000
--- a/salvattore.install
+++ /dev/null
@@ -1,22 +0,0 @@
-<?php
-
-/**
- * @file
- * Presets PACE theme to minimal upon installation.
- */
-
-/**
- * Implements hook_install().
- */
-function salvattore_install() {
-  variable_set('salvattore_use_min_js','1');
-  variable_set('salvattore_load_default_css','0');
-}
-
-/**
- * Implements hook_uninstall().
- */
-function salvattore_uninstall() {
-  variable_del('salvattore_use_min_js');
-  variable_del('salvattore_load_default_css');
-}
diff --git a/salvattore.module b/salvattore.module
index 94f5f66..f4d9d2b 100644
--- a/salvattore.module
+++ b/salvattore.module
@@ -24,8 +24,8 @@ function salvattore_menu() {
   $items['admin/config/user-interface/salvattore'] = array(
     'title' => 'Salvattore Settings',
     'description' => 'Configure Salvattore',
-    'page callback' => 'drupal_get_form',
-    'page arguments' => array('salvattore_admin_settings_form'),
+    'page callback' => 'backdrop_get_form',
+    'page arguments' => array('salvattore_settings_form'),
     'access arguments' => array('manage Salvattore settings'),
     'file' => 'salvattore.admin.inc',
   );
@@ -34,6 +34,15 @@ function salvattore_menu() {
 }
 
 /**
+ * Implements hook_autoload_info.
+ */
+function salvattore_autoload_info() {
+  return array(
+    'views_plugin_style_salvattore' => 'views_plugin_style_salvattore.inc',
+  );
+}
+
+/**
  * Implements hook_views_api()
  */
 function salvattore_views_api() {
@@ -46,7 +55,6 @@ function salvattore_views_api() {
 function template_preprocess_views_view_salvattore(&$vars) {
   // Run preprocess function for unformatted style
   template_preprocess_views_view_unformatted($vars);
-
   // Get view options
   $view = $vars['view'];
   $options = $vars['options'];
@@ -57,17 +65,17 @@ function template_preprocess_views_view_salvattore(&$vars) {
  */
 function salvattore_preprocess_page(&$variables) {
   if (variable_get('salvattore_use_min_js')) {
-    drupal_add_js(drupal_get_path('module', 'salvattore') . '/js/salvattore.min.js', array(
+    backdrop_add_js(backdrop_get_path('module', 'salvattore') . '/js/salvattore.min.js', array(
       'scope' => 'footer',
     ));
   } else {
-    drupal_add_js(drupal_get_path('module', 'salvattore') . '/js/salvattore.js', array(
+    backdrop_add_js(backdrop_get_path('module', 'salvattore') . '/js/salvattore.js', array(
       'scope' => 'footer',
     ));
   }
 
   if (variable_get('salvattore_load_default_css')) {
-    drupal_add_css(drupal_get_path('module', 'salvattore') . '/css/salvattore_default.css', array(
+    backdrop_add_css(backdrop_get_path('module', 'salvattore') . '/css/salvattore_default.css', array(
       'type' => 'file',
       'preprocess' => FALSE, // see README
     ));
diff --git a/views_plugin_style_salvattore.inc b/views_plugin_style_salvattore.inc
index a048f3a..aed3ace 100644
--- a/views_plugin_style_salvattore.inc
+++ b/views_plugin_style_salvattore.inc
@@ -10,12 +10,8 @@ class views_plugin_style_salvattore extends views_plugin_style {
   /**
    * Set default options
    */
-  function option_definition() {
-    $options = parent::option_definition();
-
-    $options['class'] = array('default' => '');
-
-    return $options;
+  function options(&$options) {
+    parent::options($options);
   }
 
   /**
